@model FreelancePlatform.Models.AppUser
@{
    ViewData["Title"] = "Freelancer Paneli";
    var bugun = DateTime.Now.ToString("dd MMMM yyyy, dddd");
    var profilBase64 = Context.Session.GetString("ProfilResmiBase64");
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />


<style>
    body {
        background: linear-gradient(120deg, #e6f0ff 0%, #f8fafc 100%);
        min-height: 100vh;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        margin: 0;
        padding: 0;
        color: #222;
    }

    .panel-header {
        background: #fff;
        padding: 2.3rem 2rem;
        border-radius: 1.5rem;
        max-width: 1100px;
        margin: 2rem auto;
        box-shadow: 0 8px 22px rgba(45,108,223,0.10);
        animation: fadeInDown 0.9s cubic-bezier(.39,.575,.56,1) both;
    }
    @@keyframes fadeInDown {
        from

    {
        opacity: 0;
        transform: translateY(-35px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    .cards-container {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        grid-template-rows: auto auto;
        gap: 2.2rem;
        max-width: 1100px;
        margin: 0 auto 4rem auto;
        animation: fadeInUp 1s cubic-bezier(.39,.575,.56,1) 0.3s both;
    }
    @@keyframes fadeInUp {
        from

    {
        opacity: 0;
        transform: translateY(30px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    .card-custom, .profile-card {
        background: #fff;
        border-radius: 1.2rem;
        padding: 2.1rem 1.5rem 1.8rem 1.5rem;
        box-shadow: 0 10px 32px 0 rgba(55,108,223,.10);
        transition: transform 0.29s, box-shadow 0.29s;
        cursor: pointer;
        display: flex;
        flex-direction: column;
        align-items: center;
        color: #333;
    }

        .card-custom:hover, .profile-card:hover {
            transform: translateY(-10px) scale(1.03);
            box-shadow: 0 24px 52px rgba(45,108,223,0.18);
            z-index: 10;
        }

    .card-icon {
        font-size: 3.5rem;
        margin-bottom: 1rem;
        color: #2d6cdf;
        transition: color 0.22s;
    }

    .card-custom:hover .card-icon {
        color: #37c773;
    }

    .profile-card .card-icon {
        color: #f7971e;
    }

    .card-title {
        font-weight: 700;
        font-size: 1.38rem;
        margin-bottom: 0.75rem;
        text-align: center;
        color: #215bb6;
    }

    .card-desc {
        font-size: 1rem;
        text-align: center;
        margin-bottom: 1.2rem;
        color: #5d7290;
    }

    .card-btn {
        border-radius: 2rem;
        padding: 0.6rem 1.7rem;
        font-weight: 600;
        text-decoration: none;
        color: #fff;
        background: linear-gradient(90deg,#2d6cdf 60%,#37c773 100%);
        border: none;
        font-size: 1.05rem;
        box-shadow: 0 3px 14px rgba(45,108,223,0.10);
        transition: background .18s, color .16s, transform .18s;
    }

        .card-btn:hover {
            background: linear-gradient(90deg,#37c773 20%,#2d6cdf 100%);
            color: #fff;
            transform: scale(1.06);
        }

    .profile-pic {
        width: 105px;
        height: 105px;
        border-radius: 50%;
        overflow: hidden;
        margin-bottom: 1.2rem;
        border: 2.3px solid #eaf2fc;
        background: #eef6fa;
        box-shadow: 0 2px 8px rgba(45,108,223,0.06);
    }

        .profile-pic img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 50%;
        }

    .profile-name {
        font-size: 1.5rem;
        font-weight: 700;
        margin-bottom: 0.3rem;
        color: #205e9b;
    }

    .profile-email {
        font-size: .98rem;
        color: #97a9c8;
        margin-bottom: 1.1rem;
        font-weight: 500;
    }

    .profile-card .card-btn {
        background: #ffc107;
        color: #333;
        margin-top: 0.6rem;
        font-weight: 700;
        border: none;
    }

        .profile-card .card-btn:hover {
            background: #f7971e;
            color: #fff;
        }
    @@media (max-width: 1000px) {
        .cards-container

    {
        grid-template-columns: 1fr 1fr;
    }

    .profile-card {
        grid-column: 1 / 3;
    }

    }
    @@media (max-width: 650px) {
        .panel-header, .cards-container

    {
        max-width: 99vw;
    }

    .cards-container {
        grid-template-columns: 1fr;
        gap: 1.2rem;
    }

    .profile-card {
        grid-column: auto;
        min-height: 280px;
    }

    }
</style>


<div class="panel-header" style="background: white; padding: 2.3rem 2rem; border-radius: 12px; max-width: 1100px; margin: 2rem auto; box-shadow: 0 8px 20px rgba(0,0,0,0.1);">
    <div style="display:flex; justify-content:space-between; align-items:center;">
        <div>
            <h1 style="margin:0; font-weight:700; font-size:2rem; color:#f7971e;">
                <i class="fas fa-user-tie" style="color:#f7971e;"></i> Freelancer Paneli
            </h1>
            <p style="margin:0; font-weight:600; font-size:1.25rem; color:#000;">
                Hoş geldiniz, <strong>@Model.AdSoyad</strong>!
            </p>
        </div>
        <div style="text-align:right; font-size:1.1rem; color:#000;">
            <div>
                <i class="fas fa-calendar-alt" style="bold" style="color:#f7971e;"></i> <span style="color:#000;">@bugun</span>
            </div>
            <div>
                <i class="fas fa-clock" style="bold"  style="color:#f7971e;"></i> <span id="current-time" style="color:#000;">--:--:--</span>
            </div>
            <div>
                <i class="fas fa-dollar-sign" style="bold" style="color:#f7971e;"></i> <span id="usd-rate" style="color:#000;">-- ₺</span>
            </div>
            <div>
                <i class="fas fa-euro-sign" style ="bold" style="color:#f7971e;"></i> <span id="euro-rate" style="color:#000;">-- ₺</span>
            </div>
        </div>
    </div>
</div>

<div class="cards-container">
    <div class="card-custom" onclick="location.href='/Proje/Listele'">
        <i class="fas fa-briefcase card-icon text-primary"></i>
        <div class="card-title">Projeleri Listele</div>
        <div class="card-desc">Tüm iş ilanlarını görüntüleyin.</div>
        <a href="/Proje/Listele" class="card-btn">Projeler</a>
    </div>
    <div class="card-custom" onclick="location.href='/Basvuru/Basvurularim'">
        <i class="fas fa-file-alt card-icon text-info"></i>
        <div class="card-title">Başvurularım</div>
        <div class="card-desc">Başvurduğunuz projeleri inceleyin.</div>
        <a href="/Basvuru/Basvurularim" class="card-btn">Başvurular</a>
    </div>
    <div class="card-custom profile-card" onclick="location.href='/Kullanici/Profil'">
        <div class="profile-pic">
            <img src="@(string.IsNullOrEmpty(profilBase64) ? Url.Content("~/images/kprofil.png") : (profilBase64.StartsWith("data:image") ? profilBase64 : "data:image/png;base64," + profilBase64))" alt="Profil Resmi" />
        </div>
        <div class="profile-name" style="font-size: 2.2rem; font-weight: 700; color: #333;">@Model.AdSoyad</div>
        <div class="profile-email">@Model.EmailAdres</div>
        <a href="/Kullanici/Profil" class="card-btn" style="background-color:#ffc107; color:#333;">Profil</a>
    </div>
    <div class="card-custom" style="grid-column: span 2;" onclick="location.href='/Mesaj/Mesajlarim'">
        <i class="fas fa-envelope card-icon text-warning"></i>
        <div class="card-title">Mesajlarım</div>
        <div class="card-desc">Tüm mesajlarınızı buradan görüntüleyin.</div>
        <a href="/Mesaj/Mesajlarim" class="card-btn" style="background-color:#ffc107; color:#333;">Mesajlar</a>
    </div>
</div>


<!-Saat ve tarih işlemleri ->
@section Scripts {
    <script>
        function updateTime() {
            const now = new Date();
            const timeString = now.toLocaleTimeString('tr-TR', { hour12: false });
            document.getElementById('current-time').textContent = timeString;
        }
        setInterval(updateTime, 1000);
        updateTime();
        //Dolar ve euro bilgilerinin apiden çekilmesi 

        async function fetchExchangeRates() {
            try {
                const response = await fetch("https://api.collectapi.com/economy/currencyToAll?int=1&base=USD", {
                    method: "GET",
                    headers: {
                        "authorization": "apikey 1vo3Vd92FkZzfaRnKQyVLA:4uadBPgfj319GfkcE2lByS",
                        "content-type": "application/json"
                    }
                });

                const data = await response.json();
                if (!data.success) throw new Error("Kur bilgisi alınamadı");

                const usdTry = data.result.data.find(x => x.code === "TRY")?.calculated;
                const eurRate = data.result.data.find(x => x.code === "EUR")?.rate;

                if (usdTry && eurRate) {
                    document.getElementById("usd-rate").textContent = usdTry.toFixed(2) + " ₺";
                    document.getElementById("euro-rate").textContent = (usdTry / eurRate).toFixed(2) + " ₺";
                }
            } catch (e) {
                console.error("Kur bilgisi getirilemedi:", e);
            }
        }
        fetchExchangeRates();
    </script>
}
